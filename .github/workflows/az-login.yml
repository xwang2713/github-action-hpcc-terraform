name: Azure Login with GitHub Action

on:
  workflow_dispatch

permissions:
        contents: read
        id-token: write

jobs:
  Azure_Environment:

    name: "Azure Environemt"
    env:
      AZ_RESOURCE_GROUP: ming-rg-github-action-test
      AKS_NAME: ming-aks-github-action-test
      #AZ_RESOURCE_GROUP: app-bctest-sandbox-eastus-61217
      #AKS_NAME: tf-zyln-default-aks-1
      #AZ_RESOURCE_GROUP: app-hpcc-platform-dev-eastus-98900 
      #AKS_NAME: dev-aks-1 
      #AZURE_CREDENTIALS:  "${{ secrets.LNSP_AZURE_CREDENTIALS }}"
      #SUBSCRIPTION_ID: "${{ secrets.LNSP_SUBSCRIPTION_ID }}"
      #TENANT_ID:  "${{ secrets.LNSP_TENANT_ID }}" 
      #CLIENT_ID: "${{ secrets.LNSP_CLIENT_ID }}"
      #CLIENT_SECRET: "${{ secrets.LNSP_CLIENT_SECRET }}"
      SUBSCRIPTION_ID: "${{ secrets.AAD_SUBSCRIPTION_ID }}"
      TENANT_ID:  "${{ secrets.AAD_TENANT_ID }}" 
      CLIENT_ID: "${{ secrets.AAD_CLIENT_ID }}"
      CLIENT_SECRET: "${{ secrets.AAD_CLIENT_SECRET }}"
      AZURE_CREDENTIALS:  "${{ secrets.ADD_AZURE_CREDENTIALS }}"



    runs-on: ubuntu-22.04
    environment: development

    steps:
    - name: 'Install Kubectl'
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.30.2' # default is latest stable #azure aks

    - name: 'Az CLI Login with Service Principal'
      #run: |
        #az login --service-principal -u ${{ secrets.AAD_CLIENT_ID }} -p ${{ secrets.AAD_CLIENT_SECRET }} --tenant ${{ secrets.AAD_TENANT_ID }} 
        #az account set --subscription ${{ secrets.AAD_SUBSCRIPTION_ID }}
        #az login --service-principal -u ${{ env.CLIENT_ID }} -p ${{ env.CLIENT_SECRET }} --tenant ${{ env.TENANT_ID }} 
        #az account set --subscription ${{ env.SUBSCRIPTION_ID }}
      uses: azure/login@v2
      with:
        # Using client-id, tenant-id and subscription-id seems doesn't work
        #client-id: ${{ secrets.AAD_CLIENT_ID }}
        #tenant-id: ${{ secrets.AAD_TENANT_ID }}
        #subscription-id: ${{ secrets.AAD_SUBSCRIPTION_ID }}
        creds: ${{ env.AZURE_CREDENTIALS }}
      

    - name: 'Azure CLI script'
      uses: azure/cli@v2
      with:
        azcliversion: latest
        inlineScript: |
          az account show
 
    - name: Install kubelogin
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.1.3'
        skip-cache: 'true'


    - name: 'Setup the AKS Environment'
      run: |
        az account set --subscription ${{ env.SUBSCRIPTION_ID }}
        az aks get-credentials --name $AKS_NAME --resource-group $AZ_RESOURCE_GROUP --overwrite-existing

    - name: Kubelogin configuration
      run: |
        export KUBECONFIG=~/.kube/config
        kubelogin convert-kubeconfig -l spn --client-id ${{ env.CLIENT_ID }} --client-secret ${{ env.CLIENT_SECRET }}
    #    kubectl get nodes

    - name: 'Start the AKS'
      run: |
        set +e
        kubectl get node > /dev/null 2&>1
        [ $? -ne 0 ] && echo "AKS seems stopped. Start it..." && az aks start --name $AKS_NAME --resource-group $AZ_RESOURCE_GROUP
        #az aks wait --name $AKS_NAME --resource-group $AZ_RESOURCE_GROUP \
        #  --custom instanceView.statuses[?code=='PowerState/running'] --timeout 120
        # Above wait doesn't work
        # ERROR: Invalid jmespath query supplied for `--query`: Unknown token /
        # To learn more about --query, please visit: 'https://docs.microsoft.com/cli/azure/query-azure-cli'
        # Use slepp for now
        sleep 10
        kubectl get nodes
        # Work around
        [ $? -ne 0 ] && ( sleep 15 && kubectl get node ) || true

    - name: 'Stop the AKS'
      run: |
        az aks stop --name $AKS_NAME --resource-group $AZ_RESOURCE_GROUP
